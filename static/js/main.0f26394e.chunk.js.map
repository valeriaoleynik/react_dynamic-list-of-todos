{"version":3,"sources":["types/FilterTodos.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","services/user.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","services/todos.ts","index.tsx"],"names":["FilterTodos","TodoList","todos","onSelectedTodo","selectedTodo","className","map","todo","id","title","completed","isSelectedTodo","classNames","type","onClick","TodoFilter","findTodo","filterTodos","useState","query","setQuery","applyQuery","useCallback","debounce","filters","Object","values","onChange","event","target","value","nameButton","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","user","setUser","loading","setLoading","userId","useEffect","getUser","finally","undefined","href","email","name","App","setTodos","setSelectedTodo","errorMessage","setErrorMessage","appliedQuery","setAppliedQuery","setFilterTodos","catch","filteredTodos","useMemo","All","filter","Active","Completed","toLocaleLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f26394e.chunk.js","sourcesContent":["export enum FilterTodos {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo [];\n  onSelectedTodo?: (todo: Todo) => void;\n  selectedTodo: Todo | undefined;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectedTodo = () => {},\n  selectedTodo,\n\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, title, completed } = todo;\n          const isSelectedTodo = selectedTodo?.id === id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': isSelectedTodo,\n              })}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              {todo.completed ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={isSelectedTodo\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport debounce from 'lodash.debounce';\nimport { FilterTodos } from '../../types/FilterTodos';\n\ntype Props = {\n  findTodo?: (query: string) => void;\n  filterTodos?: (filter: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  findTodo = () => {},\n  filterTodos = () => {},\n}) => {\n  const [query, setQuery] = useState('');\n\n  const applyQuery = useCallback(\n    debounce(findTodo, 500),\n    [],\n  );\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleQueryDelete = () => {\n    setQuery('');\n    findTodo('');\n  };\n\n  const filters = Object.values(FilterTodos);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => filterTodos(event.target.value)}\n          >\n            {filters.map((nameButton) => (\n              <option key={nameButton} value={nameButton}>\n                {nameButton}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleQueryDelete}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n","import { get } from '../api';\nimport { User } from '../types/User';\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../services/user';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  selectedTodo?: (n: undefined) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  selectedTodo = () => {},\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const {\n    userId, id, title, completed,\n  } = todo;\n\n  useEffect(() => {\n    setLoading(true);\n\n    setTimeout(() => {\n      getUser(userId)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    }, 1000);\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading && (\n        <Loader />\n      )}\n\n      {!loading && user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectedTodo(undefined)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './services/todos';\nimport { FilterTodos } from './types/FilterTodos';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | undefined>(undefined);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [filterTodos, setFilterTodos] = useState('all');\n\n  useEffect(() => {\n    setLoading(true);\n\n    setTimeout(() => {\n      getTodos()\n        .then(setTodos)\n        .catch(() => setErrorMessage('There are no todos'))\n        .finally(() => setLoading(false));\n    }, 1000);\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    const visibleTodos = filterTodos === FilterTodos.All\n      ? todos\n      : todos.filter(todo => {\n        switch (filterTodos) {\n          case FilterTodos.Active:\n            return !todo.completed;\n\n          case FilterTodos.Completed:\n            return todo.completed;\n\n          default:\n            return false;\n        }\n      });\n\n    return visibleTodos.filter(todo => todo.title.toLocaleLowerCase().includes(appliedQuery.toLocaleLowerCase()));\n  }, [appliedQuery, filterTodos, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter findTodo={setAppliedQuery} filterTodos={setFilterTodos} />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={filteredTodos}\n                  onSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n            {errorMessage && (\n              <p className=\"notification is-danger\">\n                {errorMessage}\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          selectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { get } from '../api';\nimport { Todo } from '../types/Todo';\n\nexport const getTodos = () => get<Todo[]>('/todos');\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}